name: Copyright Check

on:
  pull_request:
    paths:
      - 'src/**'
      - 'examples/**'
  push:
    paths:
      - 'src/**'
      - 'examples/**'

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debugging SHA and Branch
        run: |
          echo "Current SHA: $GITHUB_SHA"
          echo "Current branch: $(git rev-parse --abbrev-ref HEAD)"
          echo "Current commit: $(git rev-parse HEAD)"
          echo "Recent commits:"
          git log --oneline -n 10

      - name: Download copyright check script
        run: |
          curl -O https://raw.githubusercontent.com/Tinyu-Zhao/check-copyright/master/check_copyright.py

      - name: Download setup script
        run: |
          curl -O https://raw.githubusercontent.com/Tinyu-Zhao/check-copyright/master/setup.py

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install --user setuptools
          PYTHONUSERBASE=$HOME/.local python3 setup.py install --user

      - name: Check all files
        id: copyright_check
        run: |
          files=$(find src examples \( -name "*.ino" -o -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" \) | tr '\n' ' ')
          echo "Files to check: $files"
          if [ -n "$files" ]; then
            PYTHONPATH="${HOME}/.local/lib/python3.*/site-packages" python3 check_copyright.py $files
            echo "result=modified" >> $GITHUB_ENV
          else
            echo "No files found to check."
            echo "result=unchanged" >> $GITHUB_ENV
          fi

      - name: Commit changes if any
        id: commit_changes
        run: |
          if [ "$result" = "modified" ]; then
            git config --global user.name "github-actions"
            git config --global user.email "actions@github.com"

            # Create a new branch
            BRANCH_NAME="update-copyright-notices"
            git checkout -b $BRANCH_NAME

            git add .
            git commit -m "Add copyright notices"

            # Push the branch
            git push origin $BRANCH_NAME
          else
            echo "No changes to commit."
          fi

      - name: Create a Pull Request
        if: steps.commit_changes.outputs.result == 'modified'
        uses: peter-evans/create-pull-request@v4
        with:
          title: "Add copyright notices"
          body: "This PR adds missing copyright notices to the source files."
          base: master
          head: $BRANCH_NAME
